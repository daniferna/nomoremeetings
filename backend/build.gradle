plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.0"
    id("io.micronaut.test-resources") version "3.7.0"
    id "com.microsoft.azure.azurewebapp" version "1.1.0"
}

version = "0.1"
group = "com.dfernandezaller"

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation 'io.micronaut:micronaut-management'
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    implementation("com.ongres.scram:client:2.1")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.problem:micronaut-problem-json")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.security:micronaut-security-session")
    implementation("io.micronaut:micronaut-session")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("org.apache.logging.log4j:log4j-core:2.19.0")
    implementation('com.google.api-client:google-api-client:2.1.2')
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("jakarta.persistence:jakarta.persistence-api")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut.flyway:micronaut-flyway")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly('org.postgresql:postgresql')
    runtimeOnly("org.apache.logging.log4j:log4j-api:2.19.0")
    runtimeOnly('org.apache.logging.log4j:log4j-slf4j-impl:2.19.0')
    testImplementation("org.assertj:assertj-core")
    testImplementation("org.mockito:mockito-core")
    testResourcesService("org.postgresql:postgresql")
    implementation("io.micronaut:micronaut-validation")
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.16.0'
    implementation 'com.google.apis:google-api-services-calendar:v3-rev20220715-2.0.0'
    testImplementation 'org.testcontainers:postgresql:1.18.0'
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5:3.9.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:{junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:{junitVersion}")
}


test {
    useJUnitPlatform()
}

application {
    mainClass.set("com.dfernandezaller.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

shadowJar {
    archiveFileName="app.jar"
    mergeServiceFiles()
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(false)
        annotations("com.dfernandezaller.*")
    }
    testResources {
        additionalModules.add("r2dbc-postgresql")
    }
}

shadowJar {
    archiveFileName="app.jar"
    mergeServiceFiles()
}

azurewebapp {
    subscription = 'e0f1a637-c133-48fd-b1a9-a4bff7426016'
    resourceGroup = 'nomoremeetings-uniovi-rg'
    appName = 'NoMoreMeetings-back'
    pricingTier = 'Free_F1'
    region = 'westeurope'
    runtime {
        os = 'Linux'
        webContainer = 'Java SE'
        javaVersion = 'Java 17'
    }
}



